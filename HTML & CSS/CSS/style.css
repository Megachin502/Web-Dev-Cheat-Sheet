/* * for everything */
* {
  /*margin: 0;
  padding: 0;*/
}
body {
  /*Colors can be color names (red), #, or rgb(x,x,x)*/
  background-color: #f4f4f4;
  color: #555555;
  /*Backup is helvetica then any other sans-serif font*/
  font-family: Arial, Helvetica, sans-serif;
  font-size: 16px;
  font-weight: normal;
  /*font: normal Arial, Helvetica, sans-serif; same as above*/
  line-height: 1.6em; /*line spacing, em is unit for css*/
  margin: 0;
}
/* . for class' */
.box-1 {
  background-color: #333;
  color: #fff;
  /*border*/
  border-right: 5px red solid;
  border-left: 5px red solid;
  border-top: 5px red solid;
  border-bottom: 5px red solid;
  border-width: 3px; /*replaces 5px to 3px*/
  border-bottom-width: 10px; /*target specific side*/
  border-top-style: dotted;
  border: 5px red solid; /*same as above, overrides*/
  /*margin is outside, padding is inside*/
  padding-top: 20px;
  padding-bottom: 20px;
  padding-right: 20px;
  padding-left: 20px;
  /*padding:20px; same as above*/
  margin-top: 20px;
  margin: 20px 0; /*(top bottom) and (right left)*/
}
.container {
  width: 80%; /*width alone without margin auto would start from the left, use percents with width to make things responsive*/
  margin: auto; /*sets all margins on all sides the same (centers)*/
}
.box-1 h1 {
  font-family: Tahoma;
  font-weight: 800;
  font-style: italic;
  text-decoration: underline;
  text-transform: uppercase;
  letter-spacing: 0.2em;
  word-spacing: 1em;
}
.box-2 {
  border: 3px dotted #ccc;
  padding: 20px;
  margin: 20px 0;
}
.categories {
  border: 1px #ccc solid;
  padding: 10px;
  border-radius: 15px; /*round edges*/
}
.categories h2 {
  text-align: center;
}
/*unordered list*/
.categories ul {
  /*ul has default padding*/
  list-style: square;
  list-style: none;
}
/*list elements*/
.categories li {
  padding-bottom: 6px;
  border-bottom: dotted 1px #333;
  /*uses picture has bullet*/
  list-style-image: url("/images/check.png"); /* .../ to go up */
}
a {
  text-decoration: none; /*removes underline*/
  color: #000;
}
/*a has states which can be applied to any other element as well*/
a:hover {
  color: red;
}
a:active {
  color: green;
}
a:visited {
  /*color: #000;*/
}
/*form*/
.myform .my-form {
  padding: 20px;
}
.my-form .form-group {
  padding-bottom: 15px;
}
.my-form label {
  display: block; /*label is no longer inline but now displays on new lines*/
}
/*[] to target specific type, comma to add another element*/
.my-form input[type="text"],
.my-form textarea {
  padding: 8px;
  width: 100%; /*entire container*/
}
.button {
  background-color: #333;
  color: #fff;
  padding: 10px 15px;
  border: none;
}
.button:hover {
  background: red;
  color: #fff;
}
.block {
  float: left; /*will float beside the container*/
  width: 33.3%;
  border: 1px solid #ccc;
  padding: 10px;
  box-sizing: border-box; /*takes padding and border, applies it to the width (so they can remain on the same line), flexbox is better*/
}
/*must clear float after using otherwise it will mess up the rest*/
.clr {
  clear: both;
}
#main-block {
  float: left;
  width: 70%;
  padding: 15px;
  box-sizing: border-box;
}
#sidebar {
  float: right;
  width: 30%;
  background-color: #333;
  color: #fff;
  padding: 15px;
  box-sizing: border-box;
}
.p-box {
  width: 800px;
  height: 500px;
  border: 1px solid #000;
  margin-top: 30px;
  /*pair relative with absolute*/
  position: relative;
  /*background-image*/
  background-image: url("/images/bg.jpg");
  background-position: 100px 200px;
  background-repeat: no-repeat;
  background-position: center center; /*centers in container*/
}
.p-box h1 {
  position: absolute; /*absolute means it starts at the begining of the parent container, it would be 100px from the top of the page if .p-box position wasn't relative, but since it is, it can only move within the container*/
  top: 100px;
}
.p-box h2 {
  position: absolute;
  bottom: 40px;
  right: 100px;
}
.fix-me {
  position: fixed; /*fixed means it stays on the page*/
  top: 400px;
}
/*Pseudo classes (targeting specific childs)*/
.my-list li:first-child {
  background: red; /*background takes other color or image*/
}
.my-list li:last-child {
  background: blue;
}
/*there is also nth-child(even) or odd*/
.my-list li:nth-child(5) {
  background: yellow;
}
